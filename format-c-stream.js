// Generated by CoffeeScript 1.9.1
(function() {
  var FormatCStream, Transform, util;

  util = require('util');

  Transform = require('stream').Transform;

  FormatCStream = function() {
    var cb;
    if (!this instanceof FormatCStream) {
      return new FormatCStream;
    } else {
      Transform.call(this);
    }
    cb = (function(_this) {
      return function() {
        return _this.emit('end');
      };
    })(this);
    this.on('pipe', (function(_this) {
      return function(src) {
        return src.on('end', cb);
      };
    })(this));
    return this.on('unpipe', (function(_this) {
      return function(src) {
        return src.removeListener('end', cb);
      };
    })(this));
  };

  util.inherits(FormatCStream, Transform);

  FormatCStream.prototype._transform = function(chunk, enc, cb) {
    var str;
    str = chunk.toString();
    this.push(new Buffer(str.replace(/([^\s])\s+\n/g, function(str, g1) {
      return g1 + "\n";
    }).replace(/([^\s])\s+([^\s])/g, function(str, g1, g2) {
      return g1 + " " + g2;
    }).replace(/^\s+([^\s])/g, function(str, g1) {
      return "" + g1;
    }).replace(/(\s)/g, function(str, g1) {
      if (g1 === "\n") {
        return "\n";
      } else {
        return " ";
      }
    }).replace(/([\);=\-<>+,\{\}\[\]])(\w)/g, function(str, g1, g2) {
      return g1 + " " + g2;
    }).replace(/(\w)([\(=\-+\{\}\[\]])/g, function(str, g1, g2) {
      return g1 + " " + g2;
    }).replace(/([^:]):([^\s])/g, function(str, g1, g2) {
      return g1 + ":" + g2;
    }).replace(/::\s+([^\s])/g, function(str, g1) {
      return "::" + g1;
    }).replace(/([^<>\s])([<>]){1}/g, function(str, g1, g2) {
      return g1 + " " + g2;
    }).replace(/([<>])([^<>\s])/g, function(str, g1, g2) {
      return g1 + " " + g2;
    }).replace(/>\s+>/g, ">>").replace(/<\s+</g, "<<").replace(/(\w)\s+\(/g, function(str, g1) {
      return g1 + " (";
    }).replace(/(\w)\s+\-\-/g, function(str, g1) {
      return g1 + "--";
    }).replace(/(\w)\s+\+\+/g, function(str, g1) {
      return g1 + "++";
    }).replace(/\-\-\s+(\w)/g, function(str, g1) {
      return "--" + g1;
    }).replace(/\+\+\s+(\w)/g, function(str, g1) {
      return "++" + g1;
    })));
    return typeof cb === "function" ? cb() : void 0;
  };

  module.exports = FormatCStream;

}).call(this);
